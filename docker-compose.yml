services:
  # Serviço PHP-FPM
  php:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: app_php
    restart: always
    working_dir: /var/www/html
    volumes:
      - ./:/var/www/html
    env_file:
      - .env
    depends_on:
      - postgres
      - redis

  # Servidor Nginx
  nginx:
    image: nginx:stable-alpine
    container_name: app_nginx
    restart: always
    ports:
      - "8000:80"
    volumes:
      - ./:/var/www/html:ro
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf:ro
    depends_on:
      - php

  # Banco de dados PostgreSQL
  postgres:
    image: postgres:17-alpine
    container_name: app_postgres
    restart: always
    environment:
      POSTGRES_DB: ${DB_DATABASE}
      POSTGRES_USER: ${DB_USERNAME}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_HOST_AUTH_METHOD: trust
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data

  # Cache Redis
  redis:
    image: redis:alpine
    container_name: app_redis
    restart: always
    ports:
      - "6379:6379"

  # Node para build/watch de assets (Vite)
  node:
    image: node:20-alpine
    container_name: app_node
    working_dir: /var/www/html
    volumes:
      - ./:/var/www/html
    environment:
      - CHOKIDAR_USEPOLLING=true
    ports:
      - "5173:5173"
    command: ["tail", "-f", "/dev/null"]
    depends_on:
      - php

volumes:
  pgdata:
# Você pode adicionar uma seção de networks se desejar isolar a comunicação:
# networks:
#   app-network:
#     driver: bridge
